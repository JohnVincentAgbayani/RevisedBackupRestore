{
  "schemaVersion": "2.2",
  "description": "Command Document Example JSON Template",
  "parameters": {
    "VolumeID": {
      "type": "String",
      "description": "Volume ID of the newly attached volume"
    },
    "CaseNum": {
      "type": "String",
      "description": "SCTASK number for the backup restore request"
    }
  },
  "mainSteps": [
    {
      "action": "aws:runPowerShellScript",
      "name": "example",
      "inputs": {
        "runCommand": [
          "",
          "$disks = Get-Disk",
          "$target_label =  '{{VolumeID}}'",
          "$target_snow = '{{CaseNum}}'",
          "$temp_path = 'C:\\temp_disk_script.txt'",
          "foreach($disk in $disks)",
          "{if ($disk.SerialNumber.Contains($target_label.Replace('-','')))",
          "{if ($disk.OperationalStatus -eq 'Offline')",
          "{$select_echo = 'select disk ' + $disk.Number",
          "echo $select_echo > $temp_path",
          "echo 'online disk'>> $temp_path",
          "echo 'attributes disk clear readonly'>> $temp_path",
          "echo 'exit'>> $temp_path",
          "cat $temp_path | diskpart}",
          "$target_partitions = Get-Partition -DiskNumber $disk.Number",
          "$target_drive_letter = $target_partitions.Where({ $_.Type -eq 'Basic'}).DriveLetter",
          "Write-Host $target_drive_letter",
          "$target_label = $target_snow + ' (' + $target_label + ')'",
          "Set-Volume -DriveLetter $target_drive_letter -NewFileSystemLabel $target_label}}",
          "echo 'drive_letter_marker ' + $target_drive_letter",
          ""
        ]
      }
    }
  ]
}